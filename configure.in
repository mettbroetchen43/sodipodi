dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.50)
AC_INIT(sodipodi, 0.29pre)
AC_CONFIG_SRCDIR(src/main.c)
AM_INIT_AUTOMAKE

AM_CONFIG_HEADER(config.h)

AC_PROG_INTLTOOL(0.22)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AM_PROG_AS
AC_HEADER_STDC

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
	AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale", [Localization directory])
else
	AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale", [Localization directory])
fi

dnl AM_PROG_LIBTOOL

dnl ******************************
dnl Gettext stuff
dnl ******************************
GETTEXT_PACKAGE=$PACKAGE
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",[Translation domain used])
dnl Add the languages which your application supports here.
ALL_LINGUAS="az ca da de el es et fr ga gl hu it ja no ru sk sl sv tr uk pl pt_BR pt zh_CN"
AM_GNU_GETTEXT

AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "x$PKG_CONFIG" == "xno"; then
	AC_MSG_ERROR(You have to install pkg-config to compile sodipodi.)
fi

dnl ******************************
dnl GnomePrint checking
dnl ******************************

PKG_CHECK_MODULES(GNOME_PRINT, libgnomeprint-2.0 >= 1.116.1  libgnomeprintui-2.0 >= 1.116.0, gp=yes, gp=no)
AC_SUBST(GNOME_PRINT_CFLAGS)
AC_SUBST(GNOME_PRINT_LIBS)
AM_CONDITIONAL(USE_GNOME_PRINT, test "x$gp" == "xyes")
if test "x$gp" == "xyes"; then
	AC_DEFINE(WITH_GNOME_PRINT, 1, [Use gnome print font database and spooler frontend])
fi


dnl ******************************
dnl   Unconditional dependencies
dnl ******************************

PKG_CHECK_MODULES(SODIPODI, gtk+-2.0 >= 2.0.0  libart-2.0 >= 2.3.10  libxml-2.0 >= 2-2.4.24)
SODIPODI_LIBS="$SODIPODI_LIBS -lpopt -lpng -lz"

dnl ******************************
dnl Frontline/Autotrace support
dnl ******************************
ifdef([AM_PATH_FRONTLINE],
	[AM_PATH_FRONTLINE("0.5.1",[AC_DEFINE(ENABLE_AUTOTRACE)
		SODIPODI_CFLAGS="$FRONTLINE_CFLAGS $SODIPODI_CFLAGS"
		SODIPODI_LIBS="$FRONTLINE_LIBS $SODIPODI_LIBS"], 
	AC_MSG_WARN([Cannot find Frontline library.])
	AC_MSG_WARN([AutoTrace function are disabled.]))
])

AC_SUBST(SODIPODI_CFLAGS)
AC_SUBST(SODIPODI_LIBS)

#
# Checks to see if we should compile in MMX support (there will be
# a runtime test when the code is actually run to see if it should
# be used - this just checks if we can compile it.)
#
# This code is partially taken from Mesa
#
dnl Let people disable the MMX optimization
AC_ARG_ENABLE(mmx, [  --disable-mmx     Don't use MMX optimization [default=auto]], enable_mmx="$enableval", enable_mmx=auto)

AC_MSG_CHECKING(for x86 platform)
case $host_cpu in
  i386|i486|i586|i686|i786|k6|k7)
    use_x86_asm=yes
    ;;
  *)
    use_x86_asm=no
esac
AC_MSG_RESULT($use_x86_asm)

dnl Are we going to use MMX extensions
use_mmx_asm=no

AC_MSG_CHECKING(compiler support for MMX)

if test x$enable_mmx = xauto ; then
  if test $use_x86_asm = yes; then
    save_ac_ext=$ac_ext
    ac_ext=S
    
    cp $srcdir/src/libnr/nr_mmx_R8G8B8A8_P_R8G8B8A8_P_A8_RGBAP.S conftest.S
    if AC_TRY_EVAL(ac_compile); then
        use_mmx_asm=yes
    fi
    dnl rm -f conftest.[oS]

    ac_ext=$save_ac_ext
  fi

dnl Enforce usage of MMX extensions
elif test x$enable_mmx = xyes ; then
    use_mmx_asm=yes
else
    use_mmx_asm=no
fi

if test $use_mmx_asm = yes; then
	AC_DEFINE(WITH_MMX, 1, [Use MMX optimizations, if CPU supports it])
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

AM_CONDITIONAL(USE_MMX, test x$use_mmx_asm = xyes)

AC_DEFINE(GTK_ENABLE_BROKEN,1,[Use broken and deprectaded Gtk stuff])

AC_OUTPUT([ intl/Makefile m4/Makefile 
m4/Makefile
intl/Makefile 
Makefile
src/Makefile
src/libnr/Makefile
src/libnrtype/Makefile
src/xml/Makefile
src/svg/Makefile
src/widgets/Makefile
src/helper/Makefile
src/dialogs/Makefile
src/display/Makefile
glade/Makefile
po/Makefile.in
sodipodi.spec
sodipodi.1
])
