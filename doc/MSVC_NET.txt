Building Sodipodi with MS Visual Studio .NET

I have hacked together solution and project files
for building sodipodi under MS Visual Studio .NET.

Prerequisites:

1. Sodipodi from CVS
Checkout somewhere. Most other build packages have to
be installed into topmost sodipodi directory (from
now I call it $TOPDIR - for example, sources are
$TOPDIR\src and documents $TOPDIR\doc).

2. Gtk+ 2.x binaries
Download from http://www.dropline.net/gtk/ and install
anywhere. Sodipodi should be able to determine the
location of libraries during installation time.
Copy contents of Gtk+ installation directory into
$TOPDIR\GnuWin32. I.e. there should be files
$TOPDIR\GnuWin32\lib\libglib-2.0-0.dll
Remark: You can also install Gtk+ binary into
your build directory, but I find it better idea to
install it to other place, because this is the
package, that users have to istall in before sodipodi.

3. Gtk+ 2.x development packages
Download and install into $TOPDIR\GnuWin32. I.e. there
should be directories $TOPDIR\GnuWin32\bin,
$TOPDIR\GnuWin32\include and so on

4. FreeType2 binaries
Download from GnuWin32 project
http://gnuwin32.sourceforge.net/packages.html
and install into $TOPDIR\GnuWin32. I.e. there
should be file:
$TOPDIR\GnuWin32\bin\freetype-6.dll

5. FreeType2 development packages
Download from GnuWin32 project
http://gnuwin32.sourceforge.net/packages.html
and install into $TOPDIR\GnuWin32. I.e. there
should be file:
$TOPDIR\GnuWin32\include\freetype2\freetype\freetype.h

6. LibXML2 binaries
Download from GnuWin32 project
http://gnuwin32.sourceforge.net/packages.html
and install into $TOPDIR\GnuWin32
I.e there should be file
$TOPDIR\GnuWin32\bin\libxml2.dll

7. LibXML2 development packages
Download from GnuWin32 project
http://gnuwin32.sourceforge.net/packages.html
and install into $TOPDIR\GnuWin32
I.e there should be file
$TOPDIR\GnuWin32\include\libxml2\libxml\tree.h

8. Libart sources
Download gnome ftp:
ftp://ftp.gnome.org/mirror/gnome.org/sources/libart_lgpl/2.3/
Unpack (or install), and copy as libart_lgpl
directory under $TOPDIR\src. I.e. there should
be files, like $TOPDIR\src\libart_lgpl\art_misc.h
Remark: You need reasonably recent libart_lgpl (theone that
has art_svp_intersect.h header).

9. Libpng sources
Download from GnuWin32 project
http://gnuwin32.sourceforge.net/packages.html
Unpack (or install), and copy sources as libpng
directory under $TOPDIR\src. I.e. there should
be files, like $TOPDIR\src\libpng\png.h
It should theoretically be possible to compile
sodipodi with installed libpng DLL, but it had
bad habit of crashing during bitmap export for me
:-(

10. MinGW
Download from
http://www.mingw.org/download.shtml
(full MinGW package, around 14MB exe). Install
into $TOPDIR\MinGW. I.e. there should be file
$TOPDIR\MinGW\bin\as.exe
This package is only needed for GNU assembler
(what is needed to compile MMX assembler code). So
you can skip this step if you remove mmx code from
libnr project, and undef WITH_MMX in properties.



Compilation

Open solution:
$TOPDIR\build\vc7\sodipodi.sln
Compile it and keep eye on error messages. Libnr and
libnrtype are known to emit loads of warnings about
converting between different datatypes, but everything
else should be (almost) clean.
libart emits warning about redefining 'VERSION' - this
is harmless.
Compiled source does not run from inside Visual Studio,
unless you have hacked your PATH to inlude all
installed libraries (Gtk+, FreeType...)
If compilation succeeds, build and install SodiSetup
project. That should do the magic necessary for you :-)

Remark: On some system msgmerge (translation generator)
or glib-gemarshal (callback code generation) fail,
because they cannot find some methods from dll. I have
no idea, what causes this, but you can get over it by
copying libraries:
 iconv.dll
 intl.dll
 libglib-2.0-0.dll
from $TOPDIR\GnuWin32\lib to $TOPDIR


Remarks

Installation path is kept in HKLM and HKCU,
'Software\Sodipodi\Ichigo' value 'Path'
Default document directory should be
$HOME\My Documents (whatever glib thinks $HOME is).
Icons, some libraries and localization files are
installed into sodipodi program directory
UNIXish tree (bin, lib, share)
Configuration is kept in $APPDATADIR\Sodipodi



Known issues


Font sizes are known to be somewhat incorrect. I hope to
fix this for release time.
It uses very hackish way to keep display updated while
being in Windows dialog, or resizing windows. If there
are probelms, please report back ;-/


APPENDIX

A. Sodipodi codepages
If you want to compile sodipodi without unicode charset
(i.e. multibyte or default), you have to add codepage
files to the project.
Download from
http://sourceforge.net/project/showfiles.php?group_id=4054
(it is under release 0.29). Unpack into
$TOPDIR\src\libnrtype subdirectory (i.e. there
should be file $TOPDIR\src\libnrtype\cp1250.c)
Also add codepages.h to libnrtype project headers.

If compiling without unicode, only default codepage
will be used for fonts.

Have fun
Lauris Kaplinski



